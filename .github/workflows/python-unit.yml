name: 'python-unit-tests'

on:
  workflow_call:
    inputs:
      python_versions:
        description: Python versions to use, string formatted as JSON array 
        required: true
        type: string

jobs:
  unit:
    name: 'Check unit tests'
    if: "!contains(github.event.commits[0].message, '[skip ci]') && !contains(github.event.commits[0].message, '[ci skip]')"
    runs-on: 'ubuntu-latest'

    strategy:
      matrix:
        python-version: ${{ fromJSON(inputs.python_versions) }}

    steps:

      - uses: actions/checkout@v4

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
    
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
      - name: Install dependencies, including dev dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --with dev

      - name: Run pytest
        run: pytest tests/*.py -v -s